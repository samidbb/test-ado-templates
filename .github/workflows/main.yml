name: Run TF policy test
on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  # checkov:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0

  #   - run: docker run --volume "${{ env.GITHUB_WORKSPACE }}":/tf bridgecrew/checkov --directory /tf --soft-fail

  build:
    name: 'Build Docker Image'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build Docker Image
        working-directory: docker
        run: docker build -t bridgecrew/checkov:local .

  terraform:
    needs: build
    name: 'Terraform'
    runs-on: ubuntu-latest
    container:
      image: bridgecrew/checkov:local
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v2
      - name: Terraform Plan
        id: plan
        shell: bash
        run: |
          cd terraform
          terraform init
          terraform plan -out=tfplan.bin
          terraform show -json tfplan.bin | jq '.' > tfplan.json
          cat tfplan.json

      # - name: Install checkov
      #   run: |
      #     pip3 install checkov
      #     # check checkov is installed
      #     if [[ $(pip3 list | grep -i "checkov") =~ "checkov" ]]; then
      #       echo "checkov is installed"
      #     else
      #       echo "checkov is not installed"
      #       echo "Install checkov."
      #       exit 1
      #     fi

      # - name: Checkov GitHub Action
      #   uses: bridgecrewio/checkov-action@v12
      - name: check
        shell: bash
        run: |
          ls -la tftest/
          echo "===================="
          ls -la tftest/policies
      - name: Run test checkov
        shell: bash
        run: |
          # docker run -v $PWD/tftest:/tf bridgecrew/checkov -f tf/tfplan.json --external-checks-dir tf/policies -c CUSTOM_TAGS_POLICY --skip-check '*_AWS_*' --soft-fail
          checkov -f tftest/tfplan.json --external-checks-dir tftest/policies -c CUSTOM_TAGS_POLICY --skip-check '*_AWS_*' --soft-fail --output sarif > results.sarif



      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2

        # Results are generated only on a success or failure
        # this is required since GitHub by default won't run the next step
        # when the previous one has failed. Security checks that do not pass will 'fail'.
        # An alternative is to add `continue-on-error: true` to the previous step
        # Or 'soft_fail: true' to checkov.
        if: success() || failure()
        with:
          sarif_file: results.sarif
      # - uses: hashicorp/setup-terraform@v2

      # - name: Terraform Format
      #   run: terraform fmt

      # - name: Terraform Init
      #   run: terraform init

      # - name: what is the workspace
      #   run: |
      #     mkdir tf
      #     cp checkov/policies ./tf/policies -r

      # - name: Terraform Plan and validate
      #   # working-directory: terraform
      #   run: |
      #     cd terraform
      #     terraform init
      #     terraform plan -out tfplan
      #     terraform show -json tfplan | jq '.' > tfplan.json

      #     echo "ls what in the tf folder"
      #     ls -la ../tf
      #     echo "copy tfplan.json to tf folder"
      #     cp tfplan.json ../tf/tfplan.json

      # - name: Run checkov
      #   run: |
      #     echo "ls what in the tf folder"
      #     ls tf
      #     echo "run checkov"
      #     docker run -v $PWD/tf:/tf bridgecrew/checkov -f tf/tfplan.json --external-checks-dir tf/policies -c CUSTOM_TAGS_POLICY --skip-check '*_AWS_*' --soft-fail


      #     docker run -v $PWD/tftest:/tf bridgecrew/checkov -f tf/tfplan.json --external-checks-dir tf/policies -c CUSTOM_TAGS_POLICY --skip-check '*_AWS_*' --soft-fail

# RUNNER_WORKSPACE=/home/runner/work/test-ado-templates
# RUNNER_WORKSPACE

# jobs:
#   terraform:
#     permissions: write-all
# #      contents: read # for actions/checkout to fetch code
# #      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
# #      actions: read
#     runs-on: ubuntu-latest
#     name: Run TF plan
#     steps:
#     - run: |
#         jq --version
#     - uses: actions/checkout@v3
#     - uses: hashicorp/setup-terraform@v2
#     - name: Terraform Plan
#       id: plan
#       run: |
#         terraform init
#         terraform plan -out=tfplan.bin
#         terraform show -json tfplan.bin > tfplan.json
#         cat tfplan.json
#       working-directory: terraform

#     - name: Install checkov
#       run: |
#         pip3 install checkov
#         # check checkov is installed
#         if [[ $(pip3 list | grep -i "checkov") =~ "checkov" ]]; then
#           echo "checkov is installed"
#         else
#           echo "checkov is not installed"
#           echo "Install checkov."
#           exit 1
#         fi

#     - name: Terraform policy validation
#       working-directory: terraform
#       run: |
#         ls terraform/
#         cp terraform/tfplan.json ./tfplan.json
#         cat tfplan.json
#         echo "running checkov"
#         checkov \
#           -f tfplan.json --external-checks-dir checkov/policies \
#           -c CUSTOM_TAGS_POLICY --skip-check '*_AWS_*'
